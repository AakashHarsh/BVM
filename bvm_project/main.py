from bvm.vm import BVM
from state.world_state import WorldState
from contracts.compiler import Compiler

def main():
    print("Starting BVM...")
    
    # Initialize world state and BVM
    world_state = WorldState()
    vm = BVM(world_state)
    
    # Load contract source
    with open("contracts/math_contract.py", "r") as f:
        contract_source = f.read()
    
    # Compile contract
    print("\nCompiling contract...")
    bytecode, storage_map = Compiler.compile(contract_source)
    print(f"Generated bytecode: {bytecode.hex()}")
    print(f"Storage mapping: {storage_map}")
    
    # Execute the contract
    print("\nExecuting contract...")
    result = vm.execute(bytecode)
    
    print("\nExecution results:")
    print(f"Success: {result['success']}")
    print(f"Stack: {result['stack']}")
    print(f"Storage: {result['storage']}")

if __name__ == "__main__":
    main()
